import{_ as s,c as n,o as a,a as e}from"./app.ea5f13c6.js";const h=JSON.parse('{"title":"Open Ai","description":"","frontmatter":{},"headers":[{"level":2,"title":"Documentation","slug":"documentation","link":"#documentation","children":[]},{"level":2,"title":"Setup","slug":"setup","link":"#setup","children":[]},{"level":2,"title":"Hooks","slug":"hooks","link":"#hooks","children":[{"level":3,"title":"useOpenAi object","slug":"useopenai-object","link":"#useopenai-object","children":[]}]},{"level":2,"title":"Route","slug":"route","link":"#route","children":[{"level":3,"title":"Request","slug":"request","link":"#request","children":[]},{"level":3,"title":"Response","slug":"response","link":"#response","children":[]}]}],"relativePath":"providers/open-ai.md"}'),t={name:"providers/open-ai.md"},l=e(`<h1 id="open-ai" tabindex="-1">Open Ai <a class="header-anchor" href="#open-ai" aria-hidden="true">#</a></h1><h2 id="documentation" tabindex="-1">Documentation <a class="header-anchor" href="#documentation" aria-hidden="true">#</a></h2><p><a href="https://platform.openai.com/" target="_blank" rel="noreferrer">https://platform.openai.com/</a></p><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-hidden="true">#</a></h2><p>In order to set up OpenAi, you&#39;ll need to create an <a href="https://platform.openai.com/" target="_blank" rel="noreferrer">API key</a>, then copy and paste that into the NextAi Provider. <br><code>/api/ai/[nextai].ts</code></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">import NextAi from &#39;nextai&#39;;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">export default NextAi({</span></span>
<span class="line"><span style="color:#A6ACCD;">    Providers: {</span></span>
<span class="line"><span style="color:#A6ACCD;">        OpenAi: {</span></span>
<span class="line"><span style="color:#A6ACCD;">            apiKey: p<wbr>rocess.env.OPENAI</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">})</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="hooks" tabindex="-1">Hooks <a class="header-anchor" href="#hooks" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">import React from &#39;react&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">import { useOpenAi } from &#39;nextai&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">export default function Home() {</span></span>
<span class="line"><span style="color:#A6ACCD;">  const ai = useOpenAi(&quot;text-davinci-002&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">  const [text, setText] = React.useState&lt;string&gt;(&quot;&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">  const [res, setRes] = React.useState(&#39;&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  const submitHandler = async (e: any) =&gt; {</span></span>
<span class="line"><span style="color:#A6ACCD;">    e.preventDefault()</span></span>
<span class="line"><span style="color:#A6ACCD;">    const data = await ai.submit(text)</span></span>
<span class="line"><span style="color:#A6ACCD;">    setRes(data)</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">  return (</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      &lt;Head&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        &lt;title&gt;Create Next App&lt;/title&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        &lt;meta name=&quot;description&quot; content=&quot;Generated by create next app&quot; /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot; /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        &lt;link rel=&quot;icon&quot; href=&quot;/favicon.ico&quot; /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      &lt;/Head&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      &lt;main&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        &lt;p&gt;{ai.loading &amp;&amp; &quot;Loading&quot;}&lt;/p&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        &lt;p&gt;{res}&lt;/p&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        &lt;p&gt;{ai.errorMessage}&lt;/p&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        &lt;form onSubmit={submitHandler}&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">          &lt;input onChange={(e) =&gt; setText(e.target.value)} /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">          &lt;button type=&quot;submit&quot;&gt;Submit&lt;/button&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        &lt;/form&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      &lt;/main&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  )</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="useopenai-object" tabindex="-1">useOpenAi object <a class="header-anchor" href="#useopenai-object" aria-hidden="true">#</a></h3><p>the useOpenAi hook returns an object which allows you to access it&#39;s state management</p><p><strong>loading</strong>: boolean - Loading state of the hook when fetching data <br><br><strong>error</strong>: boolean - If there is an error, this will be true <br><br><strong>errorMessage</strong>: string - If there is a message, this will store the string <br><br><strong>success</strong>: boolean - if the function is successful, returns a true value <br><br><strong>submit</strong>: function - pass the string propmt as a param, and will return a string message response</p><h2 id="route" tabindex="-1">Route <a class="header-anchor" href="#route" aria-hidden="true">#</a></h2><p><code>POST api/ai/openai</code></p><h3 id="request" tabindex="-1">Request <a class="header-anchor" href="#request" aria-hidden="true">#</a></h3><p>prompt - string <br> model - string (optional)</p><h3 id="response" tabindex="-1">Response <a class="header-anchor" href="#response" aria-hidden="true">#</a></h3><p><code>status 201</code></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    message: string</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,18),p=[l];function o(r,i,c,A,d,u){return a(),n("div",null,p)}const g=s(t,[["render",o]]);export{h as __pageData,g as default};
